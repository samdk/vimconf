filetype on
filetype indent on
filetype plugin on


set guioptions-=m  "remove menu bar
set guioptions-=T  "remove toolbar
set guioptions-=r  "remove right-hand scroll bar
set guioptions-=l  "left-hand scroll bar
" shows/hides menu bar on Ctrl-F1
nnoremap <C-F1> :if &go=~#'m'<Bar>set go-=m<Bar>else<Bar>set go+=m<Bar>endif<CR>


" general things
set nocompatible
set backspace=indent,eol,start
syntax on
" make Python syntax highlighting highlight more things
let python_highlight_numbers = 1
let python_highlight_builtins = 1
let python_highlight_exceptions = 1

" kill error bells
set noerrorbells
set novisualbell
set t_vb=

set history=100
set ruler
set showmatch
runtime macros/matchit.vim " matches if/elseif/else as well as brackets

set scrolloff=3

set lbr " wraps at words instead of at characters

set autoindent
set smartindent

set ignorecase " for searching
set smartcase

set wildignore=*.bak,*.swp,*.pyc,*.o,*.obj,*.dll,*.exe
set wildmenu
set wildmode=list:longest

set tabstop=4
set shiftwidth=4
set softtabstop=4

au BufRead,BufNewFile *.rb,*.scala set et sw=2 sts=2 ts=2
au BufRead,BufNewFile *.py set et
au BufRead,BufNewFile * set noet sw=4 sts=4 ts=4

" backups and swap files go in .vim
set backupdir=~/.vim/backup//
set backup
set directory=~/.vim/tmp//

" autocompletes parens/brackets
inoremap ( ()<Left>
inoremap [ []<Left>

" autocomplete quotes
inoremap	'  '<Esc>:call QuoteInsertionWrapper("'")<CR>a
inoremap	"  "<Esc>:call QuoteInsertionWrapper('"')<CR>a
inoremap	`  `<Esc>:call QuoteInsertionWrapper('`')<CR>a

function! QuoteInsertionWrapper (quote)
	let col = col('.')
	if getline('.')[col-2] !~ '\k' && getline('.')[col] !~ '\k'
		normal ax
		exe "normal r".a:quote."h"
	end
endfunction

" no need for a separate .gvimrc
if has('gui_running')
	colorscheme vimsidian
	set number
	set lines=52
	set columns=98
	set guifont=Inconsolata\ 11
endif
